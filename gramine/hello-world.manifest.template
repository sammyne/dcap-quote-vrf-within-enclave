loader.preload = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ entrypoint }}"
loader.env.LD_LIBRARY_PATH = "/lib:{{ arch_libdir }}:/usr/{{ arch_libdir }}"
loader.insecure__use_cmdline_argv = true

# for eventfd test
#sys.insecure__allow_eventfd = true

fs.mount.graphene_lib.type = "chroot"
fs.mount.graphene_lib.path = "/lib"
fs.mount.graphene_lib.uri = "file:{{ gramine.runtimedir() }}"

fs.mount.host_lib.type = "chroot"
fs.mount.host_lib.path = "{{ arch_libdir }}"
fs.mount.host_lib.uri = "file:{{ arch_libdir }}"

fs.mount.host_usr_lib.type = "chroot"
fs.mount.host_usr_lib.path = "/usr/{{ arch_libdir }}"
fs.mount.host_usr_lib.uri = "file:/usr/{{ arch_libdir }}"

fs.mount.bin.type = "chroot"
fs.mount.bin.path = "/bin"
fs.mount.bin.uri = "file:/bin"

fs.mount.devkmsg.type = "chroot"
fs.mount.devkmsg.path = "/dev/kmsg"
fs.mount.devkmsg.uri = "dev:/dev/kmsg"

sgx.trusted_files = [
  "file:{{ gramine.runtimedir() }}/",
  "file:{{ arch_libdir }}/",
  "file:{{ entrypoint }}",
]

sgx.nonpie_binary = true
# this must be set, otherwise aesm would report error 42 (AESM_ATT_KEY_NOT_INITIALIZED)
# ref: https://github.com/intel/linux-sgx/blob/master/psw/ae/inc/internal/aesm_error.h#L77
sgx.remote_attestation = true
sgx.thread_num = 16
